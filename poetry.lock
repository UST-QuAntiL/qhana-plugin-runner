[[package]]
category = "dev"
description = "A configurable sidebar-enabled Sphinx theme"
name = "alabaster"
optional = false
python-versions = "*"
version = "0.7.12"

[[package]]
category = "main"
description = "A database migration tool for SQLAlchemy."
name = "alembic"
optional = false
python-versions = ">=3.7"
version = "1.8.1"

[package.dependencies]
Mako = "*"
SQLAlchemy = ">=1.3.0"
importlib-metadata = {version = "*", markers = "python_version < \"3.9\""}
importlib-resources = {version = "*", markers = "python_version < \"3.9\""}

[package.extras]
tz = ["python-dateutil"]

[[package]]
category = "main"
description = "Low-level AMQP client for Python (fork of amqplib)."
name = "amqp"
optional = false
python-versions = ">=3.6"
version = "5.1.1"

[package.dependencies]
vine = ">=5.0.0"

[[package]]
category = "main"
description = "A pluggable API specification generator. Currently supports the OpenAPI Specification (f.k.a. the Swagger specification)."
name = "apispec"
optional = false
python-versions = ">=3.7"
version = "5.2.2"

[package.dependencies]
marshmallow = {version = ">=3.13.0", optional = true, markers = "extra == \"marshmallow\""}

[package.extras]
dev = [
  "PyYAML (>=3.10)",
  "flake8 (==4.0.1)",
  "flake8-bugbear (==22.4.25)",
  "marshmallow (>=3.13.0)",
  "mock",
  "mypy (==0.950)",
  "prance[osv] (>=0.11)",
  "pre-commit (>=2.4,<3.0)",
  "pytest",
  "tox",
  "types-PyYAML",
]
docs = ["marshmallow (>=3.13.0)", "pyyaml (==6.0)", "sphinx (==4.5.0)", "sphinx-issues (==3.0.1)", "sphinx-rtd-theme (==1.0.0)"]
lint = ["flake8 (==4.0.1)", "flake8-bugbear (==22.4.25)", "mypy (==0.950)", "pre-commit (>=2.4,<3.0)", "types-PyYAML"]
marshmallow = ["marshmallow (>=3.13.0)"]
tests = ["PyYAML (>=3.10)", "marshmallow (>=3.13.0)", "mock", "prance[osv] (>=0.11)", "pytest"]
validation = ["prance[osv] (>=0.11)"]
yaml = ["PyYAML (>=3.10)"]

[[package]]
category = "dev"
description = "Atomic file writes."
name = "atomicwrites"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"
version = "1.4.1"

[[package]]
category = "main"
description = "Classes Without Boilerplate"
name = "attrs"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"
version = "21.4.0"

[package.extras]
dev = [
  "cloudpickle",
  "coverage[toml] (>=5.0.2)",
  "furo",
  "hypothesis",
  "mypy",
  "pre-commit",
  "pympler",
  "pytest (>=4.3.0)",
  "pytest-mypy-plugins",
  "six",
  "sphinx",
  "sphinx-notfound-page",
  "zope.interface",
]
docs = ["furo", "sphinx", "sphinx-notfound-page", "zope.interface"]
tests = ["cloudpickle", "coverage[toml] (>=5.0.2)", "hypothesis", "mypy", "pympler", "pytest (>=4.3.0)", "pytest-mypy-plugins", "six", "zope.interface"]
tests-no-zope = ["cloudpickle", "coverage[toml] (>=5.0.2)", "hypothesis", "mypy", "pympler", "pytest (>=4.3.0)", "pytest-mypy-plugins", "six"]

[[package]]
category = "main"
description = "Internationalization utilities"
name = "babel"
optional = false
python-versions = ">=3.6"
version = "2.11.0"

[package.dependencies]
pytz = ">=2015.7"

[[package]]
category = "main"
description = "Python multiprocessing fork with improvements and bugfixes"
name = "billiard"
optional = false
python-versions = "*"
version = "3.6.4.0"

[[package]]
category = "dev"
description = "The uncompromising code formatter."
name = "black"
optional = false
python-versions = ">=3.6.2"
version = "22.10.0"

[package.dependencies]
click = ">=8.0.0"
mypy-extensions = ">=0.4.3"
pathspec = ">=0.9.0"
platformdirs = ">=2"
tomli = {version = ">=1.1.0", markers = "python_full_version < \"3.11.0a7\""}
typed-ast = {version = ">=1.4.2", markers = "python_version < \"3.8\" and implementation_name == \"cpython\""}
typing-extensions = [
  {version = ">=3.10.0.0", markers = "python_version < \"3.10\""},
  {version = ">=3.10.0.0,<3.10.0.1 || >3.10.0.1", markers = "python_version >= \"3.10\""},
]

[package.extras]
colorama = ["colorama (>=0.4.3)"]
d = ["aiohttp (>=3.7.4)"]
jupyter = ["ipython (>=7.8.0)", "tokenize-rt (>=3.2.0)"]
uvloop = ["uvloop (>=0.15.2)"]

[[package]]
category = "main"
description = "A decorator for caching properties in classes."
name = "cached-property"
optional = false
python-versions = "*"
version = "1.5.2"

[[package]]
category = "main"
description = "Distributed Task Queue."
name = "celery"
optional = false
python-versions = ">=3.7"
version = "5.2.7"

[package.dependencies]
billiard = ">=3.6.4.0,<4.0"
click = ">=8.0.3,<9.0"
click-didyoumean = ">=0.0.3"
click-plugins = ">=1.1.1"
click-repl = ">=0.2.0"
importlib-metadata = {version = ">=1.4.0", markers = "python_version < \"3.8\""}
kombu = ">=5.2.3,<6.0"
pytz = ">=2021.3"
vine = ">=5.0.0,<6.0"

[package.extras]
arangodb = ["pyArango (>=1.3.2)"]
auth = ["cryptography"]
azureblockblob = ["azure-storage-blob (==12.9.0)"]
brotli = ["brotli (>=1.0.0)", "brotlipy (>=0.7.0)"]
cassandra = ["cassandra-driver (<3.21.0)"]
consul = ["python-consul2"]
cosmosdbsql = ["pydocumentdb (==2.3.2)"]
couchbase = ["couchbase (>=3.0.0)"]
couchdb = ["pycouchdb"]
django = ["Django (>=1.11)"]
dynamodb = ["boto3 (>=1.9.178)"]
elasticsearch = ["elasticsearch"]
eventlet = ["eventlet (>=0.32.0)"]
gevent = ["gevent (>=1.5.0)"]
librabbitmq = ["librabbitmq (>=1.5.0)"]
memcache = ["pylibmc"]
mongodb = ["pymongo[srv] (>=3.11.1)"]
msgpack = ["msgpack"]
pymemcache = ["python-memcached"]
pyro = ["pyro4"]
pytest = ["pytest-celery"]
redis = ["redis (>=3.4.1,!=4.0.0,!=4.0.1)"]
s3 = ["boto3 (>=1.9.125)"]
slmq = ["softlayer-messaging (>=1.0.3)"]
solar = ["ephem"]
sqlalchemy = ["sqlalchemy"]
sqs = ["kombu[sqs]"]
tblib = ["tblib (>=1.3.0)", "tblib (>=1.5.0)"]
yaml = ["PyYAML (>=3.10)"]
zookeeper = ["kazoo (>=1.3.1)"]
zstd = ["zstandard"]

[[package]]
category = "main"
description = "Python package for providing Mozilla's CA Bundle."
name = "certifi"
optional = false
python-versions = ">=3.6"
version = "2022.9.24"

[[package]]
category = "main"
description = "The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet."
name = "charset-normalizer"
optional = false
python-versions = ">=3.6.0"
version = "2.1.1"

[package.extras]
unicode-backport = ["unicodedata2"]

[[package]]
category = "main"
description = "Composable command line interface toolkit"
name = "click"
optional = false
python-versions = ">=3.7"
version = "8.1.3"

[package.dependencies]
colorama = {version = "*", markers = "platform_system == \"Windows\""}
importlib-metadata = {version = "*", markers = "python_version < \"3.8\""}

[[package]]
category = "main"
description = "Enables git-like *did-you-mean* feature in click"
name = "click-didyoumean"
optional = false
python-versions = ">=3.6.2,<4.0.0"
version = "0.3.0"

[package.dependencies]
click = ">=7"

[[package]]
category = "main"
description = "An extension module for click to enable registering CLI commands via setuptools entry-points."
name = "click-plugins"
optional = false
python-versions = "*"
version = "1.1.1"

[package.dependencies]
click = ">=4.0"

[package.extras]
dev = ["coveralls", "pytest (>=3.6)", "pytest-cov", "wheel"]

[[package]]
category = "main"
description = "REPL plugin for Click"
name = "click-repl"
optional = false
python-versions = "*"
version = "0.2.0"

[package.dependencies]
click = "*"
prompt-toolkit = "*"
six = "*"

[[package]]
category = "main"
description = "Cross-platform colored terminal text."
name = "colorama"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*,>=2.7"
version = "0.4.6"

[[package]]
category = "dev"
description = "Code coverage measurement for Python"
name = "coverage"
optional = false
python-versions = ">=3.7"
version = "6.5.0"

[package.extras]
toml = ["tomli"]

[[package]]
category = "dev"
description = "Docutils -- Python Documentation Utilities"
name = "docutils"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"
version = "0.16"

[[package]]
category = "dev"
description = "Backport of PEP 654 (exception groups)"
name = "exceptiongroup"
optional = false
python-versions = ">=3.7"
version = "1.0.1"

[package.extras]
test = ["pytest (>=6)"]

[[package]]
category = "dev"
description = "the modular source code checker: pep8 pyflakes and co"
name = "flake8"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,>=2.7"
version = "3.9.2"

[package.dependencies]
importlib-metadata = {version = "*", markers = "python_version < \"3.8\""}
mccabe = ">=0.6.0,<0.7.0"
pycodestyle = ">=2.7.0,<2.8.0"
pyflakes = ">=2.3.0,<2.4.0"

[[package]]
category = "dev"
description = "A plugin for flake8 finding likely bugs and design problems in your program. Contains warnings that don't belong in pyflakes and pycodestyle."
name = "flake8-bugbear"
optional = false
python-versions = ">=3.6"
version = "21.11.29"

[package.dependencies]
attrs = ">=19.2.0"
flake8 = ">=3.0.0"

[package.extras]
dev = ["coverage", "hypothesis", "hypothesmith (>=0.2)", "pre-commit"]

[[package]]
category = "dev"
description = "Extension for flake8 which uses pydocstyle to check docstrings"
name = "flake8-docstrings"
optional = false
python-versions = "*"
version = "1.6.0"

[package.dependencies]
flake8 = ">=3"
pydocstyle = ">=2.1"

[[package]]
category = "main"
description = "A simple framework for building complex web applications."
name = "flask"
optional = false
python-versions = ">=3.7"
version = "2.2.2"

[package.dependencies]
Jinja2 = ">=3.0"
Werkzeug = ">=2.2.2"
click = ">=8.0"
importlib-metadata = {version = ">=3.6.0", markers = "python_version < \"3.10\""}
itsdangerous = ">=2.0"
python-dotenv = {version = "*", optional = true, markers = "extra == \"dotenv\""}

[package.extras]
async = ["asgiref (>=3.2)"]
dotenv = ["python-dotenv"]

[[package]]
category = "main"
description = "Adds i18n/l10n support to Flask applications"
name = "flask-babel"
optional = false
python-versions = "*"
version = "2.0.0"

[package.dependencies]
Babel = ">=2.3"
Flask = "*"
Jinja2 = ">=2.5"
pytz = "*"

[package.extras]
dev = ["Pallets-Sphinx-Themes", "bumpversion", "ghp-import", "pytest", "pytest-mock", "sphinx"]

[[package]]
category = "main"
description = "A Flask extension adding a decorator for CORS support"
name = "flask-cors"
optional = false
python-versions = "*"
version = "3.0.10"

[package.dependencies]
Flask = ">=0.9"
Six = "*"

[[package]]
category = "main"
description = "Extended JWT integration with Flask"
name = "flask-jwt-extended"
optional = false
python-versions = ">=3.7,<4"
version = "4.4.4"

[package.dependencies]
Flask = ">=2.0,<3.0"
PyJWT = ">=2.0,<3.0"
Werkzeug = ">=0.14"
typing-extensions = {version = ">=3.7.4", markers = "python_version < \"3.8\""}

[package.extras]
asymmetric-crypto = ["cryptography (>=3.3.1)"]

[[package]]
category = "main"
description = "SQLAlchemy database migrations for Flask applications using Alembic."
name = "flask-migrate"
optional = false
python-versions = ">=3.6"
version = "3.1.0"

[package.dependencies]
Flask = ">=0.9"
Flask-SQLAlchemy = ">=1.0"
alembic = ">=0.7"

[[package]]
category = "main"
description = "Flask/Marshmallow-based REST API framework"
name = "flask-smorest"
optional = false
python-versions = ">=3.7"
version = "0.39.0"

[package.dependencies]
apispec = {version = ">=5.1.0,<6", extras = ["marshmallow"]}
flask = ">=2.0,<3"
marshmallow = ">=3.13.0,<4"
webargs = ">=8.0.0,<9"
werkzeug = ">=2.0,<3"

[package.extras]
dev = [
  "PyYAML (==6.0)",
  "apispec (==5.2.2)",
  "coverage (==6.4.3)",
  "flake8 (==5.0.4)",
  "flake8-bugbear (==22.7.1)",
  "flask (==2.2.2)",
  "marshmallow (==3.17.0)",
  "pre-commit (==2.20.0)",
  "pytest (==7.1.2)",
  "pytest-cov (==3.0.0)",
  "webargs (==8.2.0)",
  "werkzeug (==2.2.2)",
]
lint = ["flake8 (==5.0.4)", "flake8-bugbear (==22.7.1)", "pre-commit (==2.20.0)"]
tests = [
  "PyYAML (==6.0)",
  "apispec (==5.2.2)",
  "coverage (==6.4.3)",
  "flask (==2.2.2)",
  "marshmallow (==3.17.0)",
  "pytest (==7.1.2)",
  "pytest-cov (==3.0.0)",
  "webargs (==8.2.0)",
  "werkzeug (==2.2.2)",
]

[[package]]
category = "main"
description = "Adds SQLAlchemy support to your Flask application."
name = "flask-sqlalchemy"
optional = false
python-versions = ">= 2.7, != 3.0.*, != 3.1.*, != 3.2.*, != 3.3.*"
version = "2.5.1"

[package.dependencies]
Flask = ">=0.10"
SQLAlchemy = ">=0.8.0"

[[package]]
category = "main"
description = "semantic path names and more"
name = "fspath"
optional = false
python-versions = "*"
version = "20190323"

[package.dependencies]
six = "*"

[[package]]
category = "main"
description = "Lightweight in-process concurrent programming"
name = "greenlet"
optional = false
python-versions = ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*"
version = "2.0.1"

[package.extras]
docs = ["Sphinx", "docutils (<0.18)"]
test = ["faulthandler", "objgraph", "psutil"]

[[package]]
category = "dev"
description = "A library for property-based testing"
name = "hypothesis"
optional = false
python-versions = ">=3.7"
version = "6.56.4"

[package.dependencies]
attrs = ">=19.2.0"
exceptiongroup = {version = ">=1.0.0", markers = "python_version < \"3.11\""}
sortedcontainers = ">=2.1.0,<3.0.0"

[package.extras]
all = [
  "backports.zoneinfo (>=0.2.1)",
  "black (>=19.10b0)",
  "click (>=7.0)",
  "django (>=3.2)",
  "dpcontracts (>=0.4)",
  "importlib-metadata (>=3.6)",
  "lark-parser (>=0.6.5)",
  "libcst (>=0.3.16)",
  "numpy (>=1.9.0)",
  "pandas (>=1.0)",
  "pytest (>=4.6)",
  "python-dateutil (>=1.4)",
  "pytz (>=2014.1)",
  "redis (>=3.0.0)",
  "rich (>=9.0.0)",
  "tzdata (>=2022.5)",
]
cli = ["black (>=19.10b0)", "click (>=7.0)", "rich (>=9.0.0)"]
codemods = ["libcst (>=0.3.16)"]
dateutil = ["python-dateutil (>=1.4)"]
django = ["django (>=3.2)"]
dpcontracts = ["dpcontracts (>=0.4)"]
ghostwriter = ["black (>=19.10b0)"]
lark = ["lark-parser (>=0.6.5)"]
numpy = ["numpy (>=1.9.0)"]
pandas = ["pandas (>=1.0)"]
pytest = ["pytest (>=4.6)"]
pytz = ["pytz (>=2014.1)"]
redis = ["redis (>=3.0.0)"]
zoneinfo = ["backports.zoneinfo (>=0.2.1)", "tzdata (>=2022.5)"]

[[package]]
category = "main"
description = "Internationalized Domain Names in Applications (IDNA)"
name = "idna"
optional = false
python-versions = ">=3.5"
version = "3.4"

[[package]]
category = "dev"
description = "Getting image size from png/jpeg/jpeg2000/gif file"
name = "imagesize"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"
version = "1.4.1"

[[package]]
category = "main"
description = "Read metadata from Python packages"
name = "importlib-metadata"
optional = false
python-versions = ">=3.7"
version = "5.0.0"

[package.dependencies]
typing-extensions = {version = ">=3.6.4", markers = "python_version < \"3.8\""}
zipp = ">=0.5"

[package.extras]
docs = ["furo", "jaraco.packaging (>=9)", "jaraco.tidelift (>=1.4)", "rst.linker (>=1.9)", "sphinx (>=3.5)"]
perf = ["ipython"]
testing = [
  "flake8 (<5)",
  "flufl.flake8",
  "importlib-resources (>=1.3)",
  "packaging",
  "pyfakefs",
  "pytest (>=6)",
  "pytest-black (>=0.3.7)",
  "pytest-checkdocs (>=2.4)",
  "pytest-cov",
  "pytest-enabler (>=1.3)",
  "pytest-flake8",
  "pytest-mypy (>=0.9.1)",
  "pytest-perf (>=0.9.2)",
]

[[package]]
category = "main"
description = "Read resources from Python packages"
name = "importlib-resources"
optional = false
python-versions = ">=3.7"
version = "5.10.0"

[package.dependencies]
zipp = {version = ">=3.1.0", markers = "python_version < \"3.10\""}

[package.extras]
docs = ["furo", "jaraco.packaging (>=9)", "jaraco.tidelift (>=1.4)", "rst.linker (>=1.9)", "sphinx (>=3.5)"]
testing = [
  "flake8 (<5)",
  "pytest (>=6)",
  "pytest-black (>=0.3.7)",
  "pytest-checkdocs (>=2.4)",
  "pytest-cov",
  "pytest-enabler (>=1.3)",
  "pytest-flake8",
  "pytest-mypy (>=0.9.1)",
]

[[package]]
category = "dev"
description = "iniconfig: brain-dead simple config-ini parsing"
name = "iniconfig"
optional = false
python-versions = "*"
version = "1.1.1"

[[package]]
category = "main"
description = "Pythonic task execution"
name = "invoke"
optional = false
python-versions = "*"
version = "1.7.3"

[[package]]
category = "main"
description = "Safely pass data to untrusted environments and back."
name = "itsdangerous"
optional = false
python-versions = ">=3.7"
version = "2.1.2"

[[package]]
category = "main"
description = "A very fast and expressive template engine."
name = "jinja2"
optional = false
python-versions = ">=3.7"
version = "3.1.2"

[package.dependencies]
MarkupSafe = ">=2.0"

[package.extras]
i18n = ["Babel (>=2.7)"]

[[package]]
category = "main"
description = "An implementation of JSON Schema validation for Python"
name = "jsonschema"
optional = false
python-versions = ">=3.7"
version = "4.17.0"

[package.dependencies]
attrs = ">=17.4.0"
importlib-metadata = {version = "*", markers = "python_version < \"3.8\""}
importlib-resources = {version = ">=1.4.0", markers = "python_version < \"3.9\""}
pkgutil-resolve-name = {version = ">=1.3.10", markers = "python_version < \"3.9\""}
pyrsistent = ">=0.14.0,<0.17.0 || >0.17.0,<0.17.1 || >0.17.1,<0.17.2 || >0.17.2"
typing-extensions = {version = "*", markers = "python_version < \"3.8\""}

[package.extras]
format = ["fqdn", "idna", "isoduration", "jsonpointer (>1.13)", "rfc3339-validator", "rfc3987", "uri-template", "webcolors (>=1.11)"]
format-nongpl = [
  "fqdn",
  "idna",
  "isoduration",
  "jsonpointer (>1.13)",
  "rfc3339-validator",
  "rfc3986-validator (>0.1.0)",
  "uri-template",
  "webcolors (>=1.11)",
]

[[package]]
category = "main"
description = "Messaging library for Python."
name = "kombu"
optional = false
python-versions = ">=3.7"
version = "5.2.4"

[package.dependencies]
amqp = ">=5.0.9,<6.0.0"
cached-property = {version = "*", markers = "python_version < \"3.8\""}
importlib-metadata = {version = ">=0.18", markers = "python_version < \"3.8\""}
vine = "*"

[package.extras]
azureservicebus = ["azure-servicebus (>=7.0.0)"]
azurestoragequeues = ["azure-storage-queue"]
consul = ["python-consul (>=0.6.0)"]
librabbitmq = ["librabbitmq (>=2.0.0)"]
mongodb = ["pymongo (>=3.3.0,<3.12.1)"]
msgpack = ["msgpack"]
pyro = ["pyro4"]
qpid = ["qpid-python (>=0.26)", "qpid-tools (>=0.26)"]
redis = ["redis (>=3.4.1,!=4.0.0,!=4.0.1)"]
slmq = ["softlayer-messaging (>=1.0.3)"]
sqlalchemy = ["sqlalchemy"]
sqs = ["boto3 (>=1.9.12)", "pycurl (>=7.44.1,<7.45.0)", "urllib3 (>=1.26.7)"]
yaml = ["PyYAML (>=3.10)"]
zookeeper = ["kazoo (>=1.3.1)"]

[[package]]
category = "main"
description = "Sphinx-doc extensions & tools to extract documentation from C/C++ source file comments."
name = "linuxdoc"
optional = false
python-versions = "*"
version = "20221025"

[package.dependencies]
fspath = "*"

[[package]]
category = "main"
description = "A super-fast templating language that borrows the best ideas from the existing templating languages."
name = "mako"
optional = false
python-versions = ">=3.7"
version = "1.2.3"

[package.dependencies]
MarkupSafe = ">=0.9.2"
importlib-metadata = {version = "*", markers = "python_version < \"3.8\""}

[package.extras]
babel = ["Babel"]
lingua = ["lingua"]
testing = ["pytest"]

[[package]]
category = "dev"
description = "Python port of markdown-it. Markdown parsing, done right!"
name = "markdown-it-py"
optional = false
python-versions = "~=3.6"
version = "1.1.0"

[package.dependencies]
attrs = ">=19,<22"
typing-extensions = {version = ">=3.7.4", markers = "python_version < \"3.8\""}

[package.extras]
code-style = ["pre-commit (==2.6)"]
compare = [
  "commonmark (>=0.9.1,<0.10.0)",
  "markdown (>=3.2.2,<3.3.0)",
  "mistletoe-ebp (>=0.10.0,<0.11.0)",
  "mistune (>=0.8.4,<0.9.0)",
  "panflute (>=1.12,<2.0)",
]
linkify = ["linkify-it-py (>=1.0,<2.0)"]
plugins = ["mdit-py-plugins"]
rtd = ["myst-nb (==0.13.0a1)", "pyyaml", "sphinx (>=2,<4)", "sphinx-book-theme", "sphinx-copybutton", "sphinx-panels (>=0.4.0,<0.5.0)"]
testing = ["coverage", "psutil", "pytest (>=3.6,<4)", "pytest-benchmark (>=3.2,<4.0)", "pytest-cov", "pytest-regressions"]

[[package]]
category = "main"
description = "Safely add untrusted strings to HTML/XML markup."
name = "markupsafe"
optional = false
python-versions = ">=3.7"
version = "2.1.1"

[[package]]
category = "main"
description = "A lightweight library for converting complex datatypes to and from native Python datatypes."
name = "marshmallow"
optional = false
python-versions = ">=3.7"
version = "3.18.0"

[package.dependencies]
packaging = ">=17.0"

[package.extras]
dev = ["flake8 (==5.0.4)", "flake8-bugbear (==22.9.11)", "mypy (==0.971)", "pre-commit (>=2.4,<3.0)", "pytest", "pytz", "simplejson", "tox"]
docs = ["alabaster (==0.7.12)", "autodocsumm (==0.2.9)", "sphinx (==5.1.1)", "sphinx-issues (==3.0.1)", "sphinx-version-warning (==1.1.2)"]
lint = ["flake8 (==5.0.4)", "flake8-bugbear (==22.9.11)", "mypy (==0.971)", "pre-commit (>=2.4,<3.0)"]
tests = ["pytest", "pytz", "simplejson"]

[[package]]
category = "dev"
description = "McCabe checker, plugin for flake8"
name = "mccabe"
optional = false
python-versions = "*"
version = "0.6.1"

[[package]]
category = "dev"
description = "Collection of plugins for markdown-it-py"
name = "mdit-py-plugins"
optional = false
python-versions = "~=3.6"
version = "0.2.8"

[package.dependencies]
markdown-it-py = ">=1.0,<2.0"

[package.extras]
code-style = ["pre-commit (==2.6)"]
rtd = ["myst-parser (==0.14.0a3)", "sphinx-book-theme (>=0.1.0,<0.2.0)"]
testing = ["coverage", "pytest (>=3.6,<4)", "pytest-cov", "pytest-regressions"]

[[package]]
category = "main"
description = "A sane Markdown parser with useful plugins and renderers"
name = "mistune"
optional = false
python-versions = "*"
version = "2.0.4"

[[package]]
category = "dev"
description = "Experimental type system extensions for programs checked with the mypy typechecker."
name = "mypy-extensions"
optional = false
python-versions = "*"
version = "0.4.3"

[[package]]
category = "dev"
description = "An extended commonmark compliant parser, with bridges to docutils & sphinx."
name = "myst-parser"
optional = false
python-versions = ">=3.6"
version = "0.15.2"

[package.dependencies]
docutils = ">=0.15,<0.18"
jinja2 = "*"
markdown-it-py = ">=1.0.0,<2.0.0"
mdit-py-plugins = ">=0.2.8,<0.3.0"
pyyaml = "*"
sphinx = ">=3.1,<5"

[package.extras]
code-style = ["pre-commit (>=2.12,<3.0)"]
linkify = ["linkify-it-py (>=1.0,<2.0)"]
rtd = [
  "ipython",
  "sphinx-book-theme (>=0.1.0,<0.2.0)",
  "sphinx-panels (>=0.5.2,<0.6.0)",
  "sphinxcontrib-bibtex (>=2.1,<3.0)",
  "sphinxcontrib.mermaid (>=0.6.3,<0.7.0)",
  "sphinxext-opengraph (>=0.4.2,<0.5.0)",
  "sphinxext-rediraffe (>=0.2,<1.0)",
]
testing = ["beautifulsoup4", "coverage", "docutils (>=0.17.0,<0.18.0)", "pytest (>=3.6,<4)", "pytest-cov", "pytest-regressions"]

[[package]]
category = "main"
description = "Core utilities for Python packages"
name = "packaging"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"
version = "20.9"

[package.dependencies]
pyparsing = ">=2.0.2"

[[package]]
category = "dev"
description = "Utility library for gitignore style pattern matching of file paths."
name = "pathspec"
optional = false
python-versions = ">=3.7"
version = "0.10.1"

[[package]]
category = "dev"
description = "Dump the software license list of Python packages installed with pip."
name = "pip-licenses"
optional = false
python-versions = "~=3.7"
version = "3.5.5"

[package.dependencies]
PTable = "*"

[package.extras]
test = ["docutils", "pytest-cov", "pytest-pycodestyle", "pytest-runner"]

[[package]]
category = "main"
description = "Resolve a name to an object."
name = "pkgutil-resolve-name"
optional = false
python-versions = ">=3.6"
version = "1.3.10"

[[package]]
category = "dev"
description = "A small Python package for determining appropriate platform-specific dirs, e.g. a \"user data dir\"."
name = "platformdirs"
optional = false
python-versions = ">=3.7"
version = "2.5.3"

[package.extras]
docs = ["furo (>=2022.9.29)", "proselint (>=0.13)", "sphinx (>=5.3)", "sphinx-autodoc-typehints (>=1.19.4)"]
test = ["appdirs (==1.4.4)", "pytest (>=7.2)", "pytest-cov (>=4)", "pytest-mock (>=3.10)"]

[[package]]
category = "dev"
description = "plugin and hook calling mechanisms for python"
name = "pluggy"
optional = false
python-versions = ">=3.6"
version = "1.0.0"

[package.dependencies]
importlib-metadata = {version = ">=0.12", markers = "python_version < \"3.8\""}

[package.extras]
dev = ["pre-commit", "tox"]
testing = ["pytest", "pytest-benchmark"]

[[package]]
category = "main"
description = "Library for building powerful interactive command lines in Python"
name = "prompt-toolkit"
optional = false
python-versions = ">=3.6.2"
version = "3.0.32"

[package.dependencies]
wcwidth = "*"

[[package]]
category = "main"
description = "psycopg2 - Python-PostgreSQL Database Adapter"
name = "psycopg2"
optional = true
python-versions = ">=3.6"
version = "2.9.5"

[[package]]
category = "dev"
description = "A simple Python library for easily displaying tabular data in a visually appealing ASCII table format"
name = "ptable"
optional = false
python-versions = "*"
version = "0.9.2"

[[package]]
category = "dev"
description = "library with cross-python path, ini-parsing, io, code, log facilities"
name = "py"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"
version = "1.11.0"

[[package]]
category = "dev"
description = "Python style guide checker"
name = "pycodestyle"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"
version = "2.7.0"

[[package]]
category = "dev"
description = "Python docstring style checker"
name = "pydocstyle"
optional = false
python-versions = ">=3.6"
version = "6.1.1"

[package.dependencies]
snowballstemmer = "*"

[package.extras]
toml = ["toml"]

[[package]]
category = "dev"
description = "passive checker of Python programs"
name = "pyflakes"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"
version = "2.3.1"

[[package]]
category = "dev"
description = "Pygments is a syntax highlighting package written in Python."
name = "pygments"
optional = false
python-versions = ">=3.6"
version = "2.13.0"

[package.extras]
plugins = ["importlib-metadata"]

[[package]]
category = "main"
description = "JSON Web Token implementation in Python"
name = "pyjwt"
optional = false
python-versions = ">=3.7"
version = "2.6.0"

[package.extras]
crypto = ["cryptography (>=3.3.1)"]
dev = [
  "sphinx",
  "sphinx-rtd-theme",
  "zope.interface",
  "cryptography (>=3.3.1)",
  "pytest (>=6.0.0,<7.0.0)",
  "coverage[toml] (==5.0.4)",
  "mypy",
  "pre-commit",
]
docs = ["sphinx", "sphinx-rtd-theme", "zope.interface"]
tests = ["pytest (>=6.0.0,<7.0.0)", "coverage[toml] (==5.0.4)"]

[[package]]
category = "main"
description = "Pure Python MySQL Driver"
name = "pymysql"
optional = true
python-versions = ">=3.6"
version = "1.0.2"

[package.extras]
ed25519 = ["PyNaCl (>=1.4.0)"]
rsa = ["cryptography"]

[[package]]
category = "main"
description = "pyparsing module - Classes and methods to define and execute parsing grammars"
name = "pyparsing"
optional = false
python-versions = ">=3.6.8"
version = "3.0.9"

[package.extras]
diagrams = ["jinja2", "railroad-diagrams"]

[[package]]
category = "main"
description = "Persistent/Functional/Immutable data structures"
name = "pyrsistent"
optional = false
python-versions = ">=3.7"
version = "0.19.2"

[[package]]
category = "dev"
description = "pytest: simple powerful testing with Python"
name = "pytest"
optional = false
python-versions = ">=3.6"
version = "6.2.5"

[package.dependencies]
atomicwrites = {version = ">=1.0", markers = "sys_platform == \"win32\""}
attrs = ">=19.2.0"
colorama = {version = "*", markers = "sys_platform == \"win32\""}
importlib-metadata = {version = ">=0.12", markers = "python_version < \"3.8\""}
iniconfig = "*"
packaging = "*"
pluggy = ">=0.12,<2.0"
py = ">=1.8.2"
toml = "*"

[package.extras]
testing = ["argcomplete", "hypothesis (>=3.56)", "mock", "nose", "requests", "xmlschema"]

[[package]]
category = "dev"
description = "Pytest plugin for measuring coverage."
name = "pytest-cov"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"
version = "2.12.1"

[package.dependencies]
coverage = ">=5.2.1"
pytest = ">=4.6"
toml = "*"

[package.extras]
testing = ["fields", "hunter", "process-tests", "pytest-xdist", "six", "virtualenv"]

[[package]]
category = "main"
description = "Read key-value pairs from a .env file and set them as environment variables"
name = "python-dotenv"
optional = false
python-versions = ">=3.7"
version = "0.21.0"

[package.extras]
cli = ["click (>=5.0)"]

[[package]]
category = "main"
description = "World timezone definitions, modern and historical"
name = "pytz"
optional = false
python-versions = "*"
version = "2022.6"

[[package]]
category = "dev"
description = "YAML parser and emitter for Python"
name = "pyyaml"
optional = false
python-versions = ">=3.6"
version = "6.0"

[[package]]
category = "main"
description = "Python client for Redis key-value store"
name = "redis"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"
version = "3.5.3"

[package.extras]
hiredis = ["hiredis (>=0.1.3)"]

[[package]]
category = "main"
description = "Python HTTP for Humans."
name = "requests"
optional = false
python-versions = ">=3.7, <4"
version = "2.28.1"

[package.dependencies]
certifi = ">=2017.4.17"
charset-normalizer = ">=2,<3"
idna = ">=2.5,<4"
urllib3 = ">=1.21.1,<1.27"

[package.extras]
socks = ["PySocks (>=1.5.6,!=1.5.7)"]
use-chardet-on-py3 = ["chardet (>=3.0.2,<6)"]

[[package]]
category = "main"
description = "Python 2 and 3 compatibility utilities"
name = "six"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*"
version = "1.16.0"

[[package]]
category = "dev"
description = "This package provides 29 stemmers for 28 languages generated from Snowball algorithms."
name = "snowballstemmer"
optional = false
python-versions = "*"
version = "2.2.0"

[[package]]
category = "dev"
description = "Sorted Containers -- Sorted List, Sorted Dict, Sorted Set"
name = "sortedcontainers"
optional = false
python-versions = "*"
version = "2.4.0"

[[package]]
category = "dev"
description = "Python documentation generator"
name = "sphinx"
optional = false
python-versions = ">=3.6"
version = "4.5.0"

[package.dependencies]
Jinja2 = ">=2.3"
Pygments = ">=2.0"
alabaster = ">=0.7,<0.8"
babel = ">=1.3"
colorama = {version = ">=0.3.5", markers = "sys_platform == \"win32\""}
docutils = ">=0.14,<0.18"
imagesize = "*"
importlib-metadata = {version = ">=4.4", markers = "python_version < \"3.10\""}
packaging = "*"
requests = ">=2.5.0"
snowballstemmer = ">=1.1"
sphinxcontrib-applehelp = "*"
sphinxcontrib-devhelp = "*"
sphinxcontrib-htmlhelp = ">=2.0.0"
sphinxcontrib-jsmath = "*"
sphinxcontrib-qthelp = "*"
sphinxcontrib-serializinghtml = ">=1.1.5"

[package.extras]
docs = ["sphinxcontrib-websupport"]
lint = ["docutils-stubs", "flake8 (>=3.5.0)", "isort", "mypy (>=0.931)", "types-requests", "types-typed-ast"]
test = ["cython", "html5lib", "pytest", "pytest-cov", "typed-ast"]

[[package]]
category = "dev"
description = "Sphinx extension that automatically documents click applications"
name = "sphinx-click"
optional = false
python-versions = ">=3.6"
version = "3.1.0"

[package.dependencies]
click = ">=7.0"
docutils = "*"
sphinx = ">=2.0"

[[package]]
category = "dev"
description = "Read the Docs theme for Sphinx"
name = "sphinx-rtd-theme"
optional = false
python-versions = "*"
version = "0.5.2"

[package.dependencies]
docutils = "<0.17"
sphinx = "*"

[package.extras]
dev = ["bump2version", "sphinxcontrib-httpdomain", "transifex-client"]

[[package]]
category = "dev"
description = "sphinxcontrib-applehelp is a sphinx extension which outputs Apple help books"
name = "sphinxcontrib-applehelp"
optional = false
python-versions = ">=3.5"
version = "1.0.2"

[package.extras]
lint = ["docutils-stubs", "flake8", "mypy"]
test = ["pytest"]

[[package]]
category = "dev"
description = "sphinxcontrib-devhelp is a sphinx extension which outputs Devhelp document."
name = "sphinxcontrib-devhelp"
optional = false
python-versions = ">=3.5"
version = "1.0.2"

[package.extras]
lint = ["docutils-stubs", "flake8", "mypy"]
test = ["pytest"]

[[package]]
category = "dev"
description = "sphinxcontrib-htmlhelp is a sphinx extension which renders HTML help files"
name = "sphinxcontrib-htmlhelp"
optional = false
python-versions = ">=3.6"
version = "2.0.0"

[package.extras]
lint = ["docutils-stubs", "flake8", "mypy"]
test = ["html5lib", "pytest"]

[[package]]
category = "dev"
description = "A sphinx extension which renders display math in HTML via JavaScript"
name = "sphinxcontrib-jsmath"
optional = false
python-versions = ">=3.5"
version = "1.0.1"

[package.extras]
test = ["flake8", "mypy", "pytest"]

[[package]]
category = "dev"
description = "sphinxcontrib-qthelp is a sphinx extension which outputs QtHelp document."
name = "sphinxcontrib-qthelp"
optional = false
python-versions = ">=3.5"
version = "1.0.3"

[package.extras]
lint = ["docutils-stubs", "flake8", "mypy"]
test = ["pytest"]

[[package]]
category = "dev"
description = "ReDoc powered OpenAPI (fka Swagger) spec renderer for Sphinx"
name = "sphinxcontrib-redoc"
optional = false
python-versions = "*"
version = "1.6.0"

[package.dependencies]
PyYAML = ">=3.12"
jinja2 = ">=2.4"
jsonschema = ">=3.0"
six = ">=1.5"
sphinx = ">=1.5"

[[package]]
category = "dev"
description = "sphinxcontrib-serializinghtml is a sphinx extension which outputs \"serialized\" HTML files (json and pickle)."
name = "sphinxcontrib-serializinghtml"
optional = false
python-versions = ">=3.5"
version = "1.1.5"

[package.extras]
lint = ["docutils-stubs", "flake8", "mypy"]
test = ["pytest"]

[[package]]
category = "main"
description = "Database Abstraction Library"
name = "sqlalchemy"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,>=2.7"
version = "1.4.43"

[package.dependencies]
greenlet = {version = "!=0.4.17", markers = "python_version >= \"3\" and (platform_machine == \"aarch64\" or platform_machine == \"ppc64le\" or platform_machine == \"x86_64\" or platform_machine == \"amd64\" or platform_machine == \"AMD64\" or platform_machine == \"win32\" or platform_machine == \"WIN32\")"}
importlib-metadata = {version = "*", markers = "python_version < \"3.8\""}

[package.extras]
aiomysql = ["aiomysql", "greenlet (!=0.4.17)"]
aiosqlite = ["aiosqlite", "greenlet (!=0.4.17)", "typing_extensions (!=3.10.0.1)"]
asyncio = ["greenlet (!=0.4.17)"]
asyncmy = ["asyncmy (>=0.2.3,!=0.2.4)", "greenlet (!=0.4.17)"]
mariadb-connector = ["mariadb (>=1.0.1,!=1.1.2)"]
mssql = ["pyodbc"]
mssql-pymssql = ["pymssql"]
mssql-pyodbc = ["pyodbc"]
mypy = ["mypy (>=0.910)", "sqlalchemy2-stubs"]
mysql = ["mysqlclient (>=1.4.0)", "mysqlclient (>=1.4.0,<2)"]
mysql-connector = ["mysql-connector-python"]
oracle = ["cx_oracle (>=7)", "cx_oracle (>=7,<8)"]
postgresql = ["psycopg2 (>=2.7)"]
postgresql-asyncpg = ["asyncpg", "greenlet (!=0.4.17)"]
postgresql-pg8000 = ["pg8000 (>=1.16.6,!=1.29.0)"]
postgresql-psycopg2binary = ["psycopg2-binary"]
postgresql-psycopg2cffi = ["psycopg2cffi"]
pymysql = ["pymysql", "pymysql (<1)"]
sqlcipher = ["sqlcipher3_binary"]

[[package]]
category = "main"
description = "JSON type with nested change tracking for SQLAlchemy"
name = "sqlalchemy-json"
optional = false
python-versions = "*"
version = "0.5.0"

[package.dependencies]
six = "*"
sqlalchemy = ">=0.7"

[[package]]
category = "dev"
description = "Python Library for Tom's Obvious, Minimal Language"
name = "toml"
optional = false
python-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*"
version = "0.10.2"

[[package]]
category = "dev"
description = "A lil' TOML parser"
name = "tomli"
optional = false
python-versions = ">=3.6"
version = "1.2.3"

[[package]]
category = "main"
description = "Style preserving TOML library"
name = "tomlkit"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"
version = "0.7.2"

[[package]]
category = "dev"
description = "a fork of Python 2 and 3 ast modules with type comment support"
name = "typed-ast"
optional = false
python-versions = ">=3.6"
version = "1.5.4"

[[package]]
category = "main"
description = "Backported and Experimental Type Hints for Python 3.5+"
name = "typing-extensions"
optional = false
python-versions = "*"
version = "3.10.0.2"

[[package]]
category = "main"
description = "HTTP library with thread-safe connection pooling, file post, and more."
name = "urllib3"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*, <4"
version = "1.26.12"

[package.extras]
brotli = ["brotli (>=1.0.9)", "brotlicffi (>=0.8.0)", "brotlipy (>=0.6.0)"]
secure = ["certifi", "cryptography (>=1.3.4)", "idna (>=2.0.0)", "ipaddress", "pyOpenSSL (>=0.14)", "urllib3-secure-extra"]
socks = ["PySocks (>=1.5.6,!=1.5.7,<2.0)"]

[[package]]
category = "main"
description = "Promises, promises, promises."
name = "vine"
optional = false
python-versions = ">=3.6"
version = "5.0.0"

[[package]]
category = "main"
description = "Measures the displayed width of unicode strings in a terminal"
name = "wcwidth"
optional = false
python-versions = "*"
version = "0.2.5"

[[package]]
category = "main"
description = "Declarative parsing and validation of HTTP request objects, with built-in support for popular web frameworks, including Flask, Django, Bottle, Tornado, Pyramid, Falcon, and aiohttp."
name = "webargs"
optional = false
python-versions = ">=3.7"
version = "8.1.0"

[package.dependencies]
marshmallow = ">=3.0.0"
packaging = "*"

[package.extras]
dev = [
  "Django (>=2.2.0)",
  "Flask (>=0.12.5)",
  "aiohttp (>=3.0.8)",
  "bottle (>=0.12.13)",
  "falcon (>=2.0.0)",
  "flake8 (==4.0.1)",
  "flake8-bugbear (==21.11.29)",
  "mypy (==0.931)",
  "pre-commit (>=2.4,<3.0)",
  "pyramid (>=1.9.1)",
  "pytest",
  "pytest-aiohttp (>=0.3.0)",
  "tornado (>=4.5.2)",
  "tox",
  "webtest (==3.0.0)",
  "webtest-aiohttp (==2.0.0)",
]
docs = [
  "Django (>=2.2.0)",
  "Flask (>=0.12.5)",
  "Sphinx (==4.3.2)",
  "aiohttp (>=3.0.8)",
  "bottle (>=0.12.13)",
  "falcon (>=2.0.0)",
  "furo (==2022.1.2)",
  "pyramid (>=1.9.1)",
  "sphinx-issues (==3.0.1)",
  "tornado (>=4.5.2)",
]
frameworks = [
  "Django (>=2.2.0)",
  "Flask (>=0.12.5)",
  "aiohttp (>=3.0.8)",
  "bottle (>=0.12.13)",
  "falcon (>=2.0.0)",
  "pyramid (>=1.9.1)",
  "tornado (>=4.5.2)",
]
lint = ["flake8 (==4.0.1)", "flake8-bugbear (==21.11.29)", "mypy (==0.931)", "pre-commit (>=2.4,<3.0)"]
tests = [
  "Django (>=2.2.0)",
  "Flask (>=0.12.5)",
  "aiohttp (>=3.0.8)",
  "bottle (>=0.12.13)",
  "falcon (>=2.0.0)",
  "pyramid (>=1.9.1)",
  "pytest",
  "pytest-aiohttp (>=0.3.0)",
  "tornado (>=4.5.2)",
  "webtest (==3.0.0)",
  "webtest-aiohttp (==2.0.0)",
]

[[package]]
category = "main"
description = "The comprehensive WSGI web application library."
name = "werkzeug"
optional = false
python-versions = ">=3.7"
version = "2.2.2"

[package.dependencies]
MarkupSafe = ">=2.1.1"

[package.extras]
watchdog = ["watchdog"]

[[package]]
category = "main"
description = "Backport of pathlib-compatible object wrapper for zip files"
name = "zipp"
optional = false
python-versions = ">=3.7"
version = "3.10.0"

[package.extras]
docs = ["furo", "jaraco.packaging (>=9)", "jaraco.tidelift (>=1.4)", "rst.linker (>=1.9)", "sphinx (>=3.5)"]
testing = [
  "flake8 (<5)",
  "func-timeout",
  "jaraco.functools",
  "jaraco.itertools",
  "more-itertools",
  "pytest (>=6)",
  "pytest-black (>=0.3.7)",
  "pytest-checkdocs (>=2.4)",
  "pytest-cov",
  "pytest-enabler (>=1.3)",
  "pytest-flake8",
  "pytest-mypy (>=0.9.1)",
]

[extras]
psycopg2 = ["psycopg2"]
pymysql = ["PyMySQL"]

[metadata]
content-hash = "38412f24e0005fc987662e27a2445e2480feb54c9b2fc7b263b23f8199dfdbd3"
lock-version = "1.1"
python-versions = "^3.7"

[metadata.files]
alabaster = []
alembic = []
amqp = []
apispec = []
atomicwrites = []
attrs = []
babel = []
billiard = []
black = []
cached-property = []
celery = []
certifi = []
charset-normalizer = []
click = []
click-didyoumean = []
click-plugins = []
click-repl = []
colorama = []
coverage = []
docutils = []
exceptiongroup = []
flake8 = []
flake8-bugbear = []
flake8-docstrings = []
flask = []
flask-babel = []
flask-cors = []
flask-jwt-extended = []
flask-migrate = []
flask-smorest = []
flask-sqlalchemy = []
fspath = []
greenlet = []
hypothesis = []
idna = []
imagesize = []
importlib-metadata = []
importlib-resources = []
iniconfig = []
invoke = []
itsdangerous = []
jinja2 = []
jsonschema = []
kombu = []
linuxdoc = []
mako = []
markdown-it-py = []
markupsafe = []
marshmallow = []
mccabe = []
mdit-py-plugins = []
mistune = []
mypy-extensions = []
myst-parser = []
packaging = []
pathspec = []
pip-licenses = []
pkgutil-resolve-name = []
platformdirs = []
pluggy = []
prompt-toolkit = []
psycopg2 = []
ptable = []
py = []
pycodestyle = []
pydocstyle = []
pyflakes = []
pygments = []
pyjwt = []
pymysql = []
pyparsing = []
pyrsistent = []
pytest = []
pytest-cov = []
python-dotenv = []
pytz = []
pyyaml = []
redis = []
requests = []
six = []
snowballstemmer = []
sortedcontainers = []
sphinx = []
sphinx-click = []
sphinx-rtd-theme = []
sphinxcontrib-applehelp = []
sphinxcontrib-devhelp = []
sphinxcontrib-htmlhelp = []
sphinxcontrib-jsmath = []
sphinxcontrib-qthelp = []
sphinxcontrib-redoc = []
sphinxcontrib-serializinghtml = []
sqlalchemy = []
sqlalchemy-json = []
toml = []
tomli = []
tomlkit = []
typed-ast = []
typing-extensions = []
urllib3 = []
vine = []
wcwidth = []
webargs = []
werkzeug = []
zipp = []
